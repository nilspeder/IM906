USE dissertation;


select event_name, current_alloc, high_alloc 
from sys.memory_global_by_current_bytes 
where current_count > 0;

SET sql_log_bin = OFF;

set session sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';



/*Run once*/

update data1m  
SET hit_date = STR_TO_hit_date(hit_date, "%Y-%m-%d %H:%i:%s.%f");

LOCK TABLES data1m WRITE;
UNLOCK TABLES;
ALTER TABLE data1m MODIFY device_id varchar(20);
ALTER TABLE data1m MODIFY gateway varchar(3);
ALTER TABLE data1m MODIFY hit_issue_id varchar(20);
ALTER TABLE data1m MODIFY hit_module varchar(255);
ALTER TABLE data1m MODIFY cu_id varchar(10);

/* Removing first character of value - if present */
update data1m set device_id=substr(device_id,2) WHERE device_id LIKE 'd%';
update data1m set gateway=substr(gateway,2) WHERE gateway LIKE 'g%';
update data1m set hit_issue_id=substr(hit_issue_id,2);
update data1m set cu_id=substr(cu_id,2);

update data1m set hit_severity=3 WHERE hit_severity LIKE 'emergency';
update data1m set hit_severity=3 WHERE hit_severity LIKE 'alert';
update data1m set hit_severity=3 WHERE hit_severity LIKE 'critical';
update data1m set hit_severity=3 WHERE hit_severity LIKE 'error';
update data1m set hit_severity=2 WHERE hit_severity LIKE 'warning';
update data1m set hit_severity=1 WHERE hit_severity LIKE 'notice';
update data1m set hit_severity=1 WHERE hit_severity LIKE 'info';
update data1m set hit_severity=1 WHERE hit_severity LIKE 'debug';
update data1m set hit_severity=0 WHERE hit_severity LIKE 'ok';

/* Changing column datatypes to integer */
ALTER TABLE data1m MODIFY device_id INTEGER;
ALTER TABLE data1m MODIFY gateway INTEGER;
ALTER TABLE data1m MODIFY hit_issue_id INTEGER;
ALTER TABLE data1m MODIFY cu_id INTEGER;
ALTER TABLE data1m MODIFY hit_severity INTEGER;


/* END of Run once*/


DROP TABLE temp;
CREATE TABLE temp LIKE data1m; 
INSERT temp SELECT * FROM data1m;


/* Customers by hits*/
SELECT `cu_id`, COUNT(*) AS `n`
FROM data326m
GROUP BY `cu_id`;

/* Removing customers with less that 2500 hits*/
DELETE data326m
FROM data326m 
INNER JOIN (
            SELECT count(*) c, 
            `cu_id` 
            FROM `data326m` 
            GROUP BY `cu_id`
            ) xxx 
ON data326m.cu_id = xxx.cu_id 
WHERE c <= 2500;

/* view issues with one hit with OK severity*/
SELECT `hit_issue_id`, `hit_severity`, COUNT(*) c
FROM data326m
GROUP BY `hit_issue_id`;

/* Removing issues with one hit with OK severity*/
DELETE data326m
FROM data326m 
INNER JOIN (
            SELECT `hit_issue_id`,
            `hit_severity`
            FROM data326m
            GROUP BY `hit_issue_id`
            HAVING count(*) = 1
            AND `hit_severity` = 0
            ) xxx 
ON data326m.hit_issue_id = xxx.hit_issue_id ;

CREATE INDEX idx_hits ON long_cpu_hog_Prod126 (hit_date);
CREATE INDEX idx_severity ON long_cpu_hog_Prod126 (hit_severity);
CREATE INDEX idx_issue ON long_cpu_hog_Prod126 (hit_issue_id);



CREATE TABLE devices_with_severity3 
AS
SELECT distinct(device_id) FROM data326m
WHERE hit_severity = 3;

CREATE TABLE hits_devices_with_severity3 
AS
SELECT t.* FROM data326m AS t 
   INNER JOIN devices_with_severity3 AS r
   ON t.device_id = r.device_id;


SELECT * FROM data1k
where hit_module = 'wide_open_acl'
group by device_id;

SELECT * FROM data1k
where device_id = 8 or device_id = 5 or device_id = 4 or device_id = 3 or device_id = 2;

SELECT *
FROM data1k AS a
WHERE EXISTS (
         SELECT * 
		 FROM data1k 
		 WHERE device_id = a.device_id 
		 AND hit_module = 'wide_open_acl');
  
CREATE TABLE Prod126 
AS
SELECT *
FROM data326m AS a
WHERE EXISTS (
         SELECT * 
		 FROM data326m 
		 WHERE device_id = a.device_id 
		 AND hit_module LIKE '%Prod126%');
         
CREATE TABLE 'cpu' 
AS
SELECT *
FROM data326m AS a
WHERE EXISTS (
         SELECT * 
		 FROM data326m 
		 WHERE device_id = a.device_id 
		 AND hit_module LIKE '%cpu%');
         



/*Creating Flaps (filtering out hits where there is not a state change in severity for a particular issue) */
/* Using SQL code generated by R DBPLYR */
/*DROP TABLE flap1;*/

SELECT `hit_date`, `device_id`, `gateway`, `hit_issue_id`, `hit_labels`, `hit_module`, `hit_severity`, `cu_id`
FROM (SELECT `hit_date`, `device_id`, `gateway`, `hit_issue_id`, `hit_labels`, `hit_module`, `hit_severity`, `cu_id`, LAG(`hit_issue_id`, 1, 0.0) OVER (ORDER BY `hit_issue_id`, `hit_date`) AS `zzz2`, LAG(`hit_severity`, 1, NULL) OVER (ORDER BY `hit_issue_id`, `hit_date`) AS `zzz3`, LAG(`hit_issue_id`, 1, NULL) OVER (ORDER BY `hit_issue_id`, `hit_date`) AS `zzz4`
FROM (SELECT *
FROM (SELECT *
FROM `flaps_Ethernet_interface_at_half_duplex`
WHERE (`device_id` = 1.0)) `dbplyr_001`
ORDER BY `hit_issue_id`, `hit_date`) `dbplyr_002`) `dbplyr_003`
WHERE (`hit_issue_id` != `zzz2` OR `hit_severity` != `zzz3` AND `hit_issue_id` = `zzz4`);



/* Hit Issue Ids by hits*/
SELECT `hit_issue_id`, COUNT(*) AS `n`
FROM flap
GROUP BY `hit_issue_id`;

/* Removing Hit Issue Ids with less thant 2 hits*/
SELECT `hit_date`, `device_id`, `gateway`, `hit_issue_id`, `hit_labels`, `hit_module`, `hit_severity`, `cu_id`
FROM (SELECT `hit_date`, `device_id`, `gateway`, `hit_issue_id`, `hit_labels`, `hit_module`, `hit_severity`, `cu_id`, COUNT(*) OVER (PARTITION BY `hit_issue_id`) AS `zzz41`
FROM `data1k`) `dbplyr_019`
WHERE (`zzz41` >= 2);